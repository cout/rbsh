#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'rbsh/shellnode'

class ShellParser < Racc::Parser

module_eval(<<'...end shell.racc/module_eval...', 'shell.racc', 232)

# vim:set ft=racc:
...end shell.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
   153,   136,    50,    50,    50,    10,    13,    17,    50,    24,
    50,   101,    10,    41,     1,     5,     8,    12,    16,    21,
    26,   164,    94,   102,    50,   117,   156,     9,   176,    19,
    22,    27,    30,   117,    39,   143,     3,    10,    13,    17,
    50,    24,   106,   139,    50,    41,     1,     5,     8,    12,
    16,    21,    26,    50,   131,   132,   133,   173,    50,     9,
   157,    19,    22,    27,    30,   157,    39,    78,     3,    79,
    80,    79,    80,    63,    59,   134,   134,    33,    36,    63,
    59,    63,    59,    79,    80,   131,   132,    79,    80,    10,
    13,    17,    50,    24,   102,    10,    10,    41,     1,     5,
     8,    12,    16,    21,    26,    10,    66,    10,    50,    33,
    36,     9,   102,    19,    22,    27,    30,    50,    39,   160,
     3,    10,    13,    17,    88,    24,   129,   139,    10,    41,
     1,     5,     8,    12,    16,    21,    26,    10,    88,    10,
   148,    57,    10,     9,    50,    19,    22,    27,    30,    94,
    39,   102,     3,    10,    10,    10,    13,    17,    50,    24,
    94,    33,    36,    41,     1,     5,     8,    12,    16,    21,
    26,    98,   161,    50,   162,   102,   110,     9,    90,    19,
    22,    27,    30,    10,    39,    50,     3,    10,    13,    17,
    50,    24,    10,    33,    36,    41,     1,     5,     8,    12,
    16,    21,    26,    50,    10,   174,    50,   177,    50,     9,
    50,    19,    22,    27,    30,    50,    39,    50,     3,   nil,
   nil,    10,    13,    17,    94,    24,   nil,    33,    36,    41,
     1,     5,     8,    12,    16,    21,    26,   nil,   nil,   nil,
   nil,   nil,   nil,     9,   nil,    19,    22,    27,    30,   nil,
    39,   nil,     3,    10,    13,    17,   nil,    24,   nil,    33,
    36,    41,     1,     5,     8,    12,    16,    21,    26,   nil,
   nil,   nil,   nil,   nil,   nil,     9,   nil,    19,    22,    27,
    30,   nil,    39,   nil,     3,   nil,   nil,    10,    13,    17,
   nil,    24,   nil,    33,    36,    41,     1,     5,     8,    12,
    16,    21,    26,   nil,   nil,   nil,   nil,   nil,   nil,     9,
   nil,    19,    22,    27,    30,   nil,   nil,   nil,     3,    10,
    13,    17,   nil,    24,   nil,    33,    36,    41,     1,     5,
     8,    12,    16,    21,    26,   nil,   nil,   nil,   nil,   nil,
   nil,     9,   nil,    19,    22,    27,    30,   nil,    39,   nil,
     3,   nil,   nil,    10,    13,    17,    50,    24,   nil,    33,
    36,    41,     1,     5,     8,    12,    16,    21,    26,   nil,
   nil,   nil,   nil,   nil,   nil,     9,   nil,    19,    22,    27,
    30,   nil,    39,   nil,     3,    10,    13,    17,    50,    24,
   nil,    33,    36,    41,     1,     5,     8,    12,    16,    21,
    26,   nil,   nil,   nil,   nil,   nil,   nil,     9,   nil,    19,
    22,    27,    30,   nil,    39,   nil,     3,   nil,   nil,    10,
    13,    17,    50,    24,   nil,    33,    36,    41,     1,     5,
     8,    12,    16,    21,    26,   nil,   nil,   nil,   nil,   nil,
   nil,     9,   nil,    19,    22,    27,    30,   nil,    39,   nil,
     3,    10,    13,    17,    50,    24,   nil,    33,    36,    41,
     1,     5,     8,    12,    16,    21,    26,   nil,   nil,   nil,
   nil,   nil,   nil,     9,   nil,    19,    22,    27,    30,   nil,
    39,   nil,     3,   nil,   nil,    10,    72,   nil,   nil,    24,
   nil,    33,    36,    41,     1,     5,     8,    12,    16,    21,
   nil,   nil,   nil,    10,    13,    17,    50,    24,   nil,   nil,
   nil,    41,     1,     5,     8,    12,    16,    21,    26,   nil,
   nil,   nil,   nil,    33,    36,     9,   nil,    19,    22,    27,
    30,    10,    39,   nil,     3,    24,   nil,   nil,   nil,    41,
     1,     5,     8,    12,    16,    21,    24,   nil,   nil,   nil,
    41,     1,     5,     8,    12,    16,    21,    33,    36,    10,
    13,    17,    50,    24,   nil,   nil,   nil,    41,     1,     5,
     8,    12,    16,    21,    26,    33,    36,   nil,   nil,   nil,
   nil,     9,   nil,    19,    22,    27,    30,   nil,    39,   nil,
     3,   nil,   nil,   nil,   nil,   nil,   nil,    10,    13,    17,
    50,    24,   nil,    33,    36,    41,     1,     5,     8,    12,
    16,    21,    26,   nil,    33,    36,   nil,   nil,   nil,     9,
   nil,    19,    22,    27,    30,   nil,    39,   nil,     3,   nil,
   nil,    33,    36,    10,    13,    17,   nil,    24,   nil,   nil,
   nil,    41,     1,     5,     8,    12,    16,    21,    26,   nil,
   nil,   nil,   nil,   nil,   nil,     9,   nil,    19,    22,    27,
    30,   nil,    39,    10,     3,   nil,   nil,    24,   nil,    33,
    36,    41,     1,     5,     8,    12,    16,    21,    10,   nil,
   nil,   nil,    24,   nil,   nil,   nil,    41,     1,     5,     8,
    12,    16,    21,   nil,   nil,   nil,   nil,   nil,   nil,    10,
    13,    17,    94,    24,   nil,    33,    36,    41,     1,     5,
     8,    12,    16,    21,    26,   nil,   nil,   nil,   nil,   nil,
   nil,     9,   nil,    19,    22,    27,    30,   nil,    39,    10,
     3,   nil,   nil,    24,   nil,    33,    36,    41,     1,     5,
     8,    12,    16,    21,   nil,   nil,   nil,   nil,   nil,   nil,
    33,    36,    10,    13,    17,    50,    24,   nil,   nil,   nil,
    41,     1,     5,     8,    12,    16,    21,    26,   nil,   nil,
   nil,    33,    36,   nil,     9,   nil,    19,    22,    27,    30,
   nil,    39,   nil,     3,    10,    13,    17,   nil,    24,   nil,
   nil,   nil,    41,     1,     5,     8,    12,    16,    21,    26,
   nil,    33,    36,   nil,   nil,   nil,     9,   nil,    19,    22,
    27,    30,    24,   nil,   nil,     3,    41,     1,     5,     8,
    12,    16,    21,    24,    33,    36,   nil,    41,     1,     5,
     8,    12,    16,    21,    24,   nil,   nil,   nil,    41,     1,
     5,     8,    12,    16,    21,    41,     1,     5,     8,    12,
    16,    21,    26,   nil,   nil,   nil,    33,    36,   nil,     9,
   nil,    19,    22,    27,    30,   nil,   nil,   nil,     3,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    33,    36,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    33,    36,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    33,    36,   nil,   nil,   nil,   nil,   nil,    33,
    36 ]

racc_action_check = [
   138,   122,    48,   138,   122,   108,   108,   108,    15,   108,
    93,    66,   126,   108,   108,   108,   108,   108,   108,   108,
   108,   155,    96,   107,   170,    97,   142,   108,   170,   108,
   108,   108,   108,   107,   108,   126,   108,   164,   164,   164,
   164,   164,    76,   126,   101,   164,   164,   164,   164,   164,
   164,   164,   164,   165,   120,   120,   120,   165,    92,   164,
   155,   164,   164,   164,   164,   142,   164,    27,   164,    99,
    99,    51,    51,    48,    48,   138,   122,   108,   108,    15,
    15,    93,    93,   114,   114,   162,   162,    29,    29,   156,
   156,   156,   156,   156,    69,    33,   145,   156,   156,   156,
   156,   156,   156,   156,   156,    21,    18,    16,    88,   164,
   164,   156,    67,   156,   156,   156,   156,   116,   156,   145,
   156,     0,     0,     0,    87,     0,   119,   145,    36,     0,
     0,     0,     0,     0,     0,     0,     0,    12,    40,    41,
   130,    11,     9,     0,   134,     0,     0,     0,     0,   135,
     0,   137,     0,     8,   139,   132,   132,   132,   132,   132,
    60,   156,   156,   132,   132,   132,   132,   132,   132,   132,
   132,    57,   146,    56,   150,   154,    81,   132,    47,   132,
   132,   132,   132,   157,   132,    80,   132,   131,   131,   131,
   131,   131,     5,     0,     0,   131,   131,   131,   131,   131,
   131,   131,   131,    79,     1,   167,    77,   171,   173,   131,
   174,   131,   131,   131,   131,   176,   131,   177,   131,   nil,
   nil,   166,   166,   166,   166,   166,   nil,   132,   132,   166,
   166,   166,   166,   166,   166,   166,   166,   nil,   nil,   nil,
   nil,   nil,   nil,   166,   nil,   166,   166,   166,   166,   nil,
   166,   nil,   166,   115,   115,   115,   nil,   115,   nil,   131,
   131,   115,   115,   115,   115,   115,   115,   115,   115,   nil,
   nil,   nil,   nil,   nil,   nil,   115,   nil,   115,   115,   115,
   115,   nil,   115,   nil,   115,   nil,   nil,   113,   113,   113,
   nil,   113,   nil,   166,   166,   113,   113,   113,   113,   113,
   113,   113,   113,   nil,   nil,   nil,   nil,   nil,   nil,   113,
   nil,   113,   113,   113,   113,   nil,   nil,   nil,   113,   109,
   109,   109,   nil,   109,   nil,   115,   115,   109,   109,   109,
   109,   109,   109,   109,   109,   nil,   nil,   nil,   nil,   nil,
   nil,   109,   nil,   109,   109,   109,   109,   nil,   109,   nil,
   109,   nil,   nil,    19,    19,    19,    19,    19,   nil,   113,
   113,    19,    19,    19,    19,    19,    19,    19,    19,   nil,
   nil,   nil,   nil,   nil,   nil,    19,   nil,    19,    19,    19,
    19,   nil,    19,   nil,    19,     3,     3,     3,     3,     3,
   nil,   109,   109,     3,     3,     3,     3,     3,     3,     3,
     3,   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,     3,
     3,     3,     3,   nil,     3,   nil,     3,   nil,   nil,    22,
    22,    22,    22,    22,   nil,    19,    19,    22,    22,    22,
    22,    22,    22,    22,    22,   nil,   nil,   nil,   nil,   nil,
   nil,    22,   nil,    22,    22,    22,    22,   nil,    22,   nil,
    22,   106,   106,   106,   106,   106,   nil,     3,     3,   106,
   106,   106,   106,   106,   106,   106,   106,   nil,   nil,   nil,
   nil,   nil,   nil,   106,   nil,   106,   106,   106,   106,   nil,
   106,   nil,   106,   nil,   nil,    25,    25,   nil,   nil,    25,
   nil,    22,    22,    25,    25,    25,    25,    25,    25,    25,
   nil,   nil,   nil,    26,    26,    26,    26,    26,   nil,   nil,
   nil,    26,    26,    26,    26,    26,    26,    26,    26,   nil,
   nil,   nil,   nil,   106,   106,    26,   nil,    26,    26,    26,
    26,   105,    26,   nil,    26,   105,   nil,   nil,   nil,   105,
   105,   105,   105,   105,   105,   105,    53,   nil,   nil,   nil,
    53,    53,    53,    53,    53,    53,    53,    25,    25,   102,
   102,   102,   102,   102,   nil,   nil,   nil,   102,   102,   102,
   102,   102,   102,   102,   102,    26,    26,   nil,   nil,   nil,
   nil,   102,   nil,   102,   102,   102,   102,   nil,   102,   nil,
   102,   nil,   nil,   nil,   nil,   nil,   nil,    30,    30,    30,
    30,    30,   nil,   105,   105,    30,    30,    30,    30,    30,
    30,    30,    30,   nil,    53,    53,   nil,   nil,   nil,    30,
   nil,    30,    30,    30,    30,   nil,    30,   nil,    30,   nil,
   nil,   102,   102,    91,    91,    91,   nil,    91,   nil,   nil,
   nil,    91,    91,    91,    91,    91,    91,    91,    91,   nil,
   nil,   nil,   nil,   nil,   nil,    91,   nil,    91,    91,    91,
    91,   nil,    91,    85,    91,   nil,   nil,    85,   nil,    30,
    30,    85,    85,    85,    85,    85,    85,    85,    37,   nil,
   nil,   nil,    37,   nil,   nil,   nil,    37,    37,    37,    37,
    37,    37,    37,   nil,   nil,   nil,   nil,   nil,   nil,    49,
    49,    49,    49,    49,   nil,    91,    91,    49,    49,    49,
    49,    49,    49,    49,    49,   nil,   nil,   nil,   nil,   nil,
   nil,    49,   nil,    49,    49,    49,    49,   nil,    49,    73,
    49,   nil,   nil,    73,   nil,    85,    85,    73,    73,    73,
    73,    73,    73,    73,   nil,   nil,   nil,   nil,   nil,   nil,
    37,    37,    62,    62,    62,    62,    62,   nil,   nil,   nil,
    62,    62,    62,    62,    62,    62,    62,    62,   nil,   nil,
   nil,    49,    49,   nil,    62,   nil,    62,    62,    62,    62,
   nil,    62,   nil,    62,    39,    39,    39,   nil,    39,   nil,
   nil,   nil,    39,    39,    39,    39,    39,    39,    39,    39,
   nil,    73,    73,   nil,   nil,   nil,    39,   nil,    39,    39,
    39,    39,   147,   nil,   nil,    39,   147,   147,   147,   147,
   147,   147,   147,     7,    62,    62,   nil,     7,     7,     7,
     7,     7,     7,     7,   127,   nil,   nil,   nil,   127,   127,
   127,   127,   127,   127,   127,    24,    24,    24,    24,    24,
    24,    24,   118,   nil,   nil,   nil,    39,    39,   nil,   118,
   nil,   118,   118,   118,   118,   nil,   nil,   nil,   118,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   147,   147,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     7,     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   127,   127,   nil,   nil,   nil,   nil,   nil,    24,
    24 ]

racc_action_pointer = [
   119,   202,   nil,   383,   nil,   190,   nil,   817,   151,   140,
   nil,   141,   135,   nil,   nil,     3,   105,   nil,    73,   351,
   nil,   103,   417,   nil,   835,   483,   501,    63,   nil,    80,
   595,   nil,   nil,    93,   nil,   nil,   126,   676,   nil,   782,
    65,   137,   nil,   nil,   nil,   nil,   nil,   144,    -3,   697,
   nil,    64,   nil,   540,   nil,   nil,   168,   171,   nil,   nil,
   155,   nil,   750,   nil,   nil,   nil,   -23,    90,   nil,    72,
   nil,   nil,   nil,   727,   nil,   nil,    24,   201,   nil,   198,
   180,   146,   nil,   nil,   nil,   661,   nil,    51,   103,   nil,
   nil,   631,    53,     5,   nil,   nil,    17,    -7,   nil,    62,
   nil,    39,   557,   nil,   nil,   529,   449,     1,     3,   317,
   nil,   nil,   nil,   285,    76,   251,   112,   nil,   835,   103,
    35,   nil,    -1,   nil,   nil,   nil,    10,   828,   nil,   nil,
   119,   185,   153,   nil,   139,   144,   nil,   129,    -2,   152,
   nil,   nil,    -8,   nil,   nil,    94,   147,   806,   nil,   nil,
   156,   nil,   nil,   nil,   153,   -13,    87,   181,   nil,   nil,
   nil,   nil,    66,   nil,    35,    48,   219,   196,   nil,   nil,
    19,   198,   nil,   203,   205,   nil,   210,   212,   nil,   nil,
   nil,   nil ]

racc_action_default = [
  -146,  -146,   -84,  -146,   -12,  -146,   -86,   -13,  -146,  -146,
   -37,  -146,  -146,   -76,   -15,    -2,  -146,   -64,  -146,  -146,
   -16,  -146,  -146,   -17,  -146,   -69,  -146,  -146,   -18,    -4,
  -146,   -19,    -5,  -146,   -72,   -20,  -146,   -71,   -21,  -146,
    -8,  -146,   -74,   -22,   -10,   -92,   -95,  -146,   -24,  -146,
   -99,   -29,   -89,   -14,   -82,   -91,  -102,  -146,   -93,  -104,
  -106,    -1,  -102,  -103,   -97,   -98,  -146,  -146,   -94,  -146,
   -85,   -87,   -77,   -68,   -73,   -75,  -146,  -102,   -33,  -102,
  -102,  -146,   -88,   -90,   -80,   -70,   -78,    -9,  -102,   -96,
   -23,   -26,  -102,   -25,  -100,   -83,  -101,  -146,   182,    -3,
  -105,  -102,  -146,   -59,   -60,   -67,  -146,  -146,  -146,  -146,
   -65,   -81,   -79,  -146,   -28,   -27,  -102,   -34,  -146,  -146,
  -146,   -30,  -146,    -6,    -7,   -11,  -146,   -62,   -61,   -66,
  -146,  -146,  -146,   -56,  -102,  -108,   -36,  -146,  -146,  -146,
   -42,   -44,  -146,   -40,   -53,  -146,  -146,   -63,   -55,   -58,
  -146,  -107,   -31,   -35,  -146,  -146,  -102,  -146,   -41,   -43,
   -38,   -39,  -146,   -32,  -102,  -102,  -101,   -45,   -54,   -57,
  -102,   -47,   -46,  -102,  -102,   -48,  -102,  -102,   -50,   -49,
   -52,   -51 ]

racc_goto_table = [
    49,    53,    47,    93,    54,    61,   103,    29,   104,   130,
    64,   140,    60,    85,   141,   137,    49,    87,    67,    49,
   145,    69,    75,    49,   146,    76,   127,    49,   125,    81,
   158,   154,    46,   159,    86,    89,    46,   155,    91,    46,
    56,   123,   124,    46,   116,    60,   121,    65,    77,   105,
    95,   169,    46,   128,   122,    73,    74,   138,    62,    70,
    71,    15,    11,   nil,    46,    97,   nil,    46,    84,    99,
    86,   nil,    65,   nil,    45,   nil,   152,   nil,    52,   nil,
   nil,    55,   112,   115,   nil,    58,   107,   nil,   108,   109,
    60,   nil,   nil,   163,    68,   nil,   nil,   113,   114,    49,
   nil,   119,   112,    49,    84,   120,    82,   nil,   nil,    83,
   118,   nil,   nil,   nil,   nil,   nil,   111,   nil,   nil,   135,
    93,   147,   114,   nil,    54,   126,   nil,   nil,    49,    49,
   149,   150,   nil,   nil,   nil,   135,   111,   nil,   nil,   nil,
   nil,   nil,   nil,   151,    95,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   166,   nil,   165,   nil,   144,   nil,   nil,
   nil,   166,   nil,   170,   nil,   167,   nil,   nil,   nil,   nil,
   144,   nil,   nil,   171,   172,   nil,   144,   nil,   nil,   175,
   nil,   nil,   178,   179,   nil,   180,   181,   nil,   168 ]

racc_goto_check = [
    23,    12,    21,    22,    42,     3,    25,     5,    25,    35,
    46,    32,    23,    40,    33,    27,    23,     8,    21,    23,
    30,    21,    42,    23,    31,    21,    11,    23,     9,    21,
    32,    27,    29,    33,    42,    46,    29,    34,     3,    29,
    29,     6,     6,    29,    26,    23,    25,    29,    24,    40,
    42,    35,    29,    37,    26,    39,    29,    28,     4,    43,
    44,     2,     1,   nil,    29,     7,   nil,    29,    29,     5,
    42,   nil,    29,   nil,    45,   nil,    25,   nil,    45,   nil,
   nil,    45,    42,     3,   nil,    45,     7,   nil,     7,     7,
    23,   nil,   nil,    25,    45,   nil,   nil,     7,     5,    23,
   nil,    21,    42,    23,    29,    21,    45,   nil,   nil,    45,
     7,   nil,   nil,   nil,   nil,   nil,    29,   nil,   nil,    23,
    22,    12,     5,   nil,    42,     7,   nil,   nil,    23,    23,
    21,    21,   nil,   nil,   nil,    23,    29,   nil,   nil,   nil,
   nil,   nil,   nil,     7,    42,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    23,   nil,    21,   nil,    29,   nil,   nil,
   nil,    23,   nil,    21,   nil,     7,   nil,   nil,   nil,   nil,
    29,   nil,   nil,     7,     7,   nil,    29,   nil,   nil,     7,
   nil,   nil,     7,     7,   nil,     7,     7,   nil,    29 ]

racc_goto_pointer = [
   nil,    62,    61,   -10,    43,     7,   -67,     9,   -22,   -85,
   nil,   -92,    -6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    -1,   -46,    -3,    21,   -61,   -53,  -107,   -65,    31,
  -106,  -102,  -115,  -112,  -102,  -111,   nil,   -65,   nil,    30,
   -24,   nil,    -3,    35,    36,    73,    -6,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    92,    51,    32,   100,    40,    44,
     4,     7,   nil,    14,    20,    23,    28,    31,    35,    38,
    43,   nil,    48,    96,   nil,   nil,   nil,   nil,   nil,    34,
   nil,   nil,   nil,   nil,   142,   nil,    18,   nil,    25,   nil,
   nil,    37,    42,     2,     6,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 79, :_reduce_1,
  1, 79, :_reduce_2,
  3, 80, :_reduce_3,
  1, 80, :_reduce_4,
  1, 83, :_reduce_5,
  4, 83, :_reduce_6,
  4, 83, :_reduce_7,
  1, 84, :_reduce_8,
  2, 84, :_reduce_9,
  1, 86, :_reduce_10,
  4, 86, :_reduce_11,
  1, 87, :_reduce_12,
  1, 87, :_reduce_13,
  2, 87, :_reduce_14,
  1, 87, :_reduce_15,
  1, 89, :_reduce_16,
  1, 89, :_reduce_17,
  1, 89, :_reduce_18,
  1, 89, :_reduce_19,
  1, 89, :_reduce_20,
  1, 89, :_reduce_21,
  1, 89, :_reduce_22,
  3, 93, :_reduce_23,
  1, 99, :_reduce_24,
  2, 99, :_reduce_25,
  2, 99, :_reduce_26,
  3, 99, :_reduce_27,
  3, 100, :_reduce_28,
  1, 100, :_reduce_29,
  4, 94, :_reduce_30,
  6, 94, :_reduce_31,
  7, 94, :_reduce_32,
  1, 102, :_reduce_33,
  1, 104, :_reduce_none,
  2, 106, :_reduce_35,
  1, 106, :_reduce_36,
  1, 107, :_reduce_37,
  7, 95, :_reduce_38,
  7, 95, :_reduce_39,
  6, 95, :_reduce_40,
  2, 109, :_reduce_41,
  1, 109, :_reduce_42,
  2, 108, :_reduce_43,
  1, 108, :_reduce_44,
  3, 110, :_reduce_45,
  4, 110, :_reduce_46,
  4, 110, :_reduce_47,
  5, 110, :_reduce_48,
  5, 111, :_reduce_49,
  5, 111, :_reduce_50,
  6, 111, :_reduce_51,
  6, 111, :_reduce_52,
  1, 112, :_reduce_53,
  3, 112, :_reduce_54,
  6, 96, :_reduce_55,
  5, 96, :_reduce_56,
  4, 113, :_reduce_57,
  2, 113, :_reduce_58,
  3, 97, :_reduce_59,
  3, 98, :_reduce_60,
  5, 91, :_reduce_61,
  1, 115, :_reduce_62,
  2, 115, :_reduce_63,
  1, 114, :_reduce_64,
  3, 92, :_reduce_65,
  3, 103, :_reduce_66,
  3, 88, :_reduce_67,
  2, 88, :_reduce_68,
  1, 88, :_reduce_69,
  2, 88, :_reduce_70,
  1, 88, :_reduce_71,
  1, 119, :_reduce_72,
  1, 117, :_reduce_73,
  1, 116, :_reduce_74,
  2, 116, :_reduce_75,
  1, 116, :_reduce_76,
  2, 116, :_reduce_77,
  1, 118, :_reduce_78,
  2, 118, :_reduce_79,
  1, 118, :_reduce_80,
  2, 118, :_reduce_81,
  1, 90, :_reduce_82,
  2, 90, :_reduce_83,
  1, 120, :_reduce_84,
  2, 120, :_reduce_85,
  1, 120, :_reduce_86,
  2, 120, :_reduce_87,
  2, 121, :_reduce_88,
  2, 121, :_reduce_89,
  2, 121, :_reduce_90,
  2, 121, :_reduce_91,
  2, 121, :_reduce_92,
  2, 121, :_reduce_93,
  2, 121, :_reduce_94,
  1, 123, :_reduce_95,
  2, 122, :_reduce_96,
  2, 122, :_reduce_97,
  1, 124, :_reduce_98,
  1, 101, :_reduce_99,
  2, 101, :_reduce_100,
  1, 85, :_reduce_101,
  0, 85, :_reduce_102,
  1, 82, :_reduce_103,
  1, 82, :_reduce_104,
  2, 81, :_reduce_105,
  1, 81, :_reduce_106,
  2, 105, :_reduce_107,
  1, 105, :_reduce_108,
  3, 125, :_reduce_109,
  3, 126, :_reduce_110,
  2, 126, :_reduce_111,
  2, 126, :_reduce_112,
  2, 126, :_reduce_113,
  2, 126, :_reduce_114,
  3, 126, :_reduce_115,
  3, 126, :_reduce_116,
  3, 126, :_reduce_117,
  3, 126, :_reduce_118,
  3, 126, :_reduce_119,
  3, 126, :_reduce_120,
  3, 126, :_reduce_121,
  3, 126, :_reduce_122,
  3, 126, :_reduce_123,
  3, 126, :_reduce_124,
  3, 126, :_reduce_125,
  3, 126, :_reduce_126,
  3, 126, :_reduce_127,
  3, 126, :_reduce_128,
  3, 126, :_reduce_129,
  3, 126, :_reduce_130,
  3, 126, :_reduce_131,
  3, 126, :_reduce_132,
  5, 126, :_reduce_133,
  3, 126, :_reduce_134,
  3, 126, :_reduce_135,
  3, 126, :_reduce_136,
  3, 126, :_reduce_137,
  3, 126, :_reduce_138,
  3, 126, :_reduce_139,
  3, 126, :_reduce_140,
  3, 126, :_reduce_141,
  3, 126, :_reduce_142,
  3, 126, :_reduce_143,
  3, 126, :_reduce_144,
  1, 126, :_reduce_145 ]

racc_reduce_n = 146

racc_shift_n = 182

racc_token_table = {
  false => 0,
  :error => 1,
  :WORD => 2,
  :ASSIGNMENT_WORD => 3,
  :NAME => 4,
  :NEWLINE => 5,
  :IO_NUMBER => 6,
  :AND_IF => 7,
  :OR_IF => 8,
  :DSEMI => 9,
  :DLESS => 10,
  :DGREAT => 11,
  :LESSAND => 12,
  :GREATAND => 13,
  :LESSGREAT => 14,
  :DLESSDASH => 15,
  :CLOBBER => 16,
  :If => 17,
  :Then => 18,
  :Else => 19,
  :Elif => 20,
  :Fi => 21,
  :Do => 22,
  :Done => 23,
  :Case => 24,
  :Esac => 25,
  :While => 26,
  :Until => 27,
  :For => 28,
  :Lbrace => 29,
  :Rbrace => 30,
  :Bang => 31,
  :In => 32,
  :LParen => 33,
  :RParen => 34,
  :ArithmeticStart => 35,
  :ArithmeticEnd => 36,
  :ARITHINC => 37,
  :ARITHDEC => 38,
  :ARITHTILDE => 39,
  :ARITHBANG => 40,
  :ARITHTIMES => 41,
  :ARITHDIV => 42,
  :ARITHMOD => 43,
  :ARITHPLUS => 44,
  :ARITHMINUS => 45,
  :ARITHLSHIFT => 46,
  :ARITHRSHIFT => 47,
  :ARITHLT => 48,
  :ARITHLE => 49,
  :ARITHGT => 50,
  :ARITHGE => 51,
  :ARITHEQ => 52,
  :ARITHNE => 53,
  :ARITHBITAND => 54,
  :ARITHBITXOR => 55,
  :ARITHBITOR => 56,
  :ARITHLOGAND => 57,
  :ARITHLOGOR => 58,
  :ARITHQUESTION => 59,
  :ARITHCOLON => 60,
  :ARITHASSIGN => 61,
  :ARITHASSIGNTIMES => 62,
  :ARITHASSIGNDIV => 63,
  :ARITHASSIGNMOD => 64,
  :ARITHASSIGNPLUS => 65,
  :ARITHASSIGNMINUS => 66,
  :ARITHASSIGNLSHIFT => 67,
  :ARITHASSIGNRSHIFT => 68,
  :ARITHASSIGNBITAND => 69,
  :ARITHASSIGNBITXOR => 70,
  :ARITHASSIGNBITOR => 71,
  :ARITHINT => 72,
  "|" => 73,
  "<" => 74,
  ">" => 75,
  "&" => 76,
  ";" => 77 }

racc_nt_base = 78

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "WORD",
  "ASSIGNMENT_WORD",
  "NAME",
  "NEWLINE",
  "IO_NUMBER",
  "AND_IF",
  "OR_IF",
  "DSEMI",
  "DLESS",
  "DGREAT",
  "LESSAND",
  "GREATAND",
  "LESSGREAT",
  "DLESSDASH",
  "CLOBBER",
  "If",
  "Then",
  "Else",
  "Elif",
  "Fi",
  "Do",
  "Done",
  "Case",
  "Esac",
  "While",
  "Until",
  "For",
  "Lbrace",
  "Rbrace",
  "Bang",
  "In",
  "LParen",
  "RParen",
  "ArithmeticStart",
  "ArithmeticEnd",
  "ARITHINC",
  "ARITHDEC",
  "ARITHTILDE",
  "ARITHBANG",
  "ARITHTIMES",
  "ARITHDIV",
  "ARITHMOD",
  "ARITHPLUS",
  "ARITHMINUS",
  "ARITHLSHIFT",
  "ARITHRSHIFT",
  "ARITHLT",
  "ARITHLE",
  "ARITHGT",
  "ARITHGE",
  "ARITHEQ",
  "ARITHNE",
  "ARITHBITAND",
  "ARITHBITXOR",
  "ARITHBITOR",
  "ARITHLOGAND",
  "ARITHLOGOR",
  "ARITHQUESTION",
  "ARITHCOLON",
  "ARITHASSIGN",
  "ARITHASSIGNTIMES",
  "ARITHASSIGNDIV",
  "ARITHASSIGNMOD",
  "ARITHASSIGNPLUS",
  "ARITHASSIGNMINUS",
  "ARITHASSIGNLSHIFT",
  "ARITHASSIGNRSHIFT",
  "ARITHASSIGNBITAND",
  "ARITHASSIGNBITXOR",
  "ARITHASSIGNBITOR",
  "ARITHINT",
  "\"|\"",
  "\"<\"",
  "\">\"",
  "\"&\"",
  "\";\"",
  "$start",
  "complete_command",
  "list",
  "separator",
  "separator_op",
  "and_or",
  "pipeline",
  "linebreak",
  "pipe_sequence",
  "command",
  "simple_command",
  "compound_command",
  "redirect_list",
  "function_definition",
  "brace_group",
  "subshell",
  "for_clause",
  "case_clause",
  "if_clause",
  "while_clause",
  "until_clause",
  "compound_list",
  "term",
  "newline_list",
  "name",
  "do_group",
  "in",
  "sequential_sep",
  "wordlist",
  "word",
  "case_list",
  "case_list_ns",
  "case_item_ns",
  "case_item",
  "pattern",
  "else_part",
  "fname",
  "function_body",
  "cmd_prefix",
  "cmd_word",
  "cmd_suffix",
  "cmd_name",
  "io_redirect",
  "io_file",
  "io_here",
  "filename",
  "here_end",
  "arithmetic_expansion",
  "aexpr" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'shell.racc', 30)
  def _reduce_1(val, _values, result)
     result = Node::CompleteCommand.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 31)
  def _reduce_2(val, _values, result)
     result = Node::CompleteCommand.new(val.first, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 33)
  def _reduce_3(val, _values, result)
     result = Node::List.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 34)
  def _reduce_4(val, _values, result)
     result = Node::List.new(nil, nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 36)
  def _reduce_5(val, _values, result)
     result = Node::AndOr.new(nil, nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 37)
  def _reduce_6(val, _values, result)
     result = Node::AndOr.new(val[0], val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 38)
  def _reduce_7(val, _values, result)
     result = Node::AndOr.new(val[0], val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 40)
  def _reduce_8(val, _values, result)
     result = Node::Pipeline.new(val.last, false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 41)
  def _reduce_9(val, _values, result)
     result = Node::Pipeline.new(val.last, true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 43)
  def _reduce_10(val, _values, result)
     result = Node::PipeSequence.new(nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 44)
  def _reduce_11(val, _values, result)
     result = Node::PipeSequence.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 46)
  def _reduce_12(val, _values, result)
     result = Node::Command.new(val.first, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 47)
  def _reduce_13(val, _values, result)
     result = Node::Command.new(val.first, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 48)
  def _reduce_14(val, _values, result)
     result = Node::Command.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 49)
  def _reduce_15(val, _values, result)
     result = Node::Command.new(val.first, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 51)
  def _reduce_16(val, _values, result)
     result = Node::CompoundCommand.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 52)
  def _reduce_17(val, _values, result)
     result = Node::CompoundCommand.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 53)
  def _reduce_18(val, _values, result)
     result = Node::CompoundCommand.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 54)
  def _reduce_19(val, _values, result)
     result = Node::CompoundCommand.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 55)
  def _reduce_20(val, _values, result)
     result = Node::CompoundCommand.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 56)
  def _reduce_21(val, _values, result)
     result = Node::CompoundCommand.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 57)
  def _reduce_22(val, _values, result)
     result = Node::CompoundCommand.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 59)
  def _reduce_23(val, _values, result)
     result = Node::Subshell.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 61)
  def _reduce_24(val, _values, result)
     result = Node::CompoundList.new(nil, val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 62)
  def _reduce_25(val, _values, result)
     result = Node::CompoundList.new(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 63)
  def _reduce_26(val, _values, result)
     result = Node::CompoundList.new(nil, val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 64)
  def _reduce_27(val, _values, result)
     result = Node::CompoundList.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 66)
  def _reduce_28(val, _values, result)
     result = Node::Term.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 67)
  def _reduce_29(val, _values, result)
     result = Node::Term.new(nil, nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 70)
  def _reduce_30(val, _values, result)
     result = Node::For.new(val[1], nil, val[-1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 71)
  def _reduce_31(val, _values, result)
     result = Node::For.new(val[1], val[-2], val[-1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 72)
  def _reduce_32(val, _values, result)
     result = Node::For.new(val[1], val[3], val[-2], val[-1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 74)
  def _reduce_33(val, _values, result)
     result = Node::Name.new(val.first) 
    result
  end
.,.,

# reduce 34 omitted

module_eval(<<'.,.,', 'shell.racc', 78)
  def _reduce_35(val, _values, result)
     result = Node::Wordlist.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 79)
  def _reduce_36(val, _values, result)
     result = Node::Wordlist.new(nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 81)
  def _reduce_37(val, _values, result)
     result = Node::Word.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 82)
  def _reduce_38(val, _values, result)
     result = Node::CaseClause.new(val[1], val[-1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 83)
  def _reduce_39(val, _values, result)
     result = Node::CaseClause.new(val[1], val[-1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 84)
  def _reduce_40(val, _values, result)
     result = Node::CaseClause.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 86)
  def _reduce_41(val, _values, result)
     result = Node::CaseListNs.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 87)
  def _reduce_42(val, _values, result)
     result = Node::CaseListNs.new(nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 89)
  def _reduce_43(val, _values, result)
     result = Node::CaseList.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 90)
  def _reduce_44(val, _values, result)
     result = Node::CaseList.new(nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 92)
  def _reduce_45(val, _values, result)
     result = Node::CaseItemNs.new(val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 93)
  def _reduce_46(val, _values, result)
     result = Node::CaseItemNs.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 94)
  def _reduce_47(val, _values, result)
     result = Node::CaseItemNs.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 95)
  def _reduce_48(val, _values, result)
     result = Node::CaseItemNs.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 97)
  def _reduce_49(val, _values, result)
     result = Node::CaseItem.new(val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 98)
  def _reduce_50(val, _values, result)
     result = Node::CaseItem.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 99)
  def _reduce_51(val, _values, result)
     result = Node::CaseItem.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 100)
  def _reduce_52(val, _values, result)
     result = Node::CaseItem.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 102)
  def _reduce_53(val, _values, result)
     result = Node::Pattern.new(nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 103)
  def _reduce_54(val, _values, result)
     result = Node::Pattern.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 105)
  def _reduce_55(val, _values, result)
     result = Node::IfClause.new(val[1], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 106)
  def _reduce_56(val, _values, result)
     result = Node::IfClause.new(val[1], val[3], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 108)
  def _reduce_57(val, _values, result)
     result = Node::ElsePart.new(val[1], val[-1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 109)
  def _reduce_58(val, _values, result)
     result = Node::ElsePart.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 111)
  def _reduce_59(val, _values, result)
     result = Node::WhileClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 113)
  def _reduce_60(val, _values, result)
     result = Node::UntilClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 115)
  def _reduce_61(val, _values, result)
     result = Node::FunctionDefinition.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 117)
  def _reduce_62(val, _values, result)
     result = Node::FunctionBody.new(val.first, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 118)
  def _reduce_63(val, _values, result)
     result = Node::FunctionBody.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 120)
  def _reduce_64(val, _values, result)
     result = Node::Fname.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 122)
  def _reduce_65(val, _values, result)
     result = Node::BraceGroup.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 124)
  def _reduce_66(val, _values, result)
     result = Node::DoGroup.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 126)
  def _reduce_67(val, _values, result)
     result = Node::SimpleCommand.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 127)
  def _reduce_68(val, _values, result)
     result = Node::SimpleCommand.new(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 128)
  def _reduce_69(val, _values, result)
     result = Node::SimpleCommand.new(val[0], nil, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 129)
  def _reduce_70(val, _values, result)
     result = Node::SimpleCommand.new(nil, val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 130)
  def _reduce_71(val, _values, result)
     result = Node::SimpleCommand.new(nil, val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 132)
  def _reduce_72(val, _values, result)
     result = Node::CmdName.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 134)
  def _reduce_73(val, _values, result)
     result = Node::CmdWord.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 136)
  def _reduce_74(val, _values, result)
     result = Node::CmdPrefix.new(nil, val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 137)
  def _reduce_75(val, _values, result)
     result = Node::CmdPrefix.new(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 138)
  def _reduce_76(val, _values, result)
     result = Node::CmdPrefix.new(nil, nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 139)
  def _reduce_77(val, _values, result)
     result = Node::CmdPrefix.new(val[0], nil, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 141)
  def _reduce_78(val, _values, result)
     result = Node::CmdSuffix.new(nil, val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 142)
  def _reduce_79(val, _values, result)
     result = Node::CmdSuffix.new(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 143)
  def _reduce_80(val, _values, result)
     result = Node::CmdSuffix.new(nil, nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 144)
  def _reduce_81(val, _values, result)
     result = Node::CmdSuffix.new(val[0], nil, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 146)
  def _reduce_82(val, _values, result)
     result = Node::RedirectList.new(nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 147)
  def _reduce_83(val, _values, result)
     result = Node::RedirectList.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 149)
  def _reduce_84(val, _values, result)
     result = Node::IoRedirect.new(nil, val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 150)
  def _reduce_85(val, _values, result)
     result = Node::IoRedirect.new(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 151)
  def _reduce_86(val, _values, result)
     result = Node::IoRedirect.new(nil, nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 152)
  def _reduce_87(val, _values, result)
     result = Node::IoRedirect.new(val[0], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 154)
  def _reduce_88(val, _values, result)
     result = Node::IoFile.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 155)
  def _reduce_89(val, _values, result)
     result = Node::IoFile.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 156)
  def _reduce_90(val, _values, result)
     result = Node::IoFile.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 157)
  def _reduce_91(val, _values, result)
     result = Node::IoFile.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 158)
  def _reduce_92(val, _values, result)
     result = Node::IoFile.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 159)
  def _reduce_93(val, _values, result)
     result = Node::IoFile.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 160)
  def _reduce_94(val, _values, result)
     result = Node::IoFile.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 162)
  def _reduce_95(val, _values, result)
     result = Node::Filename.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 164)
  def _reduce_96(val, _values, result)
     result = Node::IoHere.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 165)
  def _reduce_97(val, _values, result)
     result = Node::IoHere.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 167)
  def _reduce_98(val, _values, result)
     result = Node::HereEnd.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 169)
  def _reduce_99(val, _values, result)
     result = Node::NewlineList.new(nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 170)
  def _reduce_100(val, _values, result)
     result = Node::NewlineList.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 172)
  def _reduce_101(val, _values, result)
     result = Node::Linebreak.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 173)
  def _reduce_102(val, _values, result)
     result = Node::Linebreak.new(nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 175)
  def _reduce_103(val, _values, result)
     result = Node::SeparatorOp.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 176)
  def _reduce_104(val, _values, result)
     result = Node::SeparatorOp.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 178)
  def _reduce_105(val, _values, result)
     result = Node::Separator.new(val.first, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 179)
  def _reduce_106(val, _values, result)
     result = Node::Separator.new(nil, val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 181)
  def _reduce_107(val, _values, result)
     result = Node::SequentialSep.new(nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 182)
  def _reduce_108(val, _values, result)
     result = Node::SequentialSep.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 186)
  def _reduce_109(val, _values, result)
     result = Node::ArithmeticExpansion.new(val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 187)
  def _reduce_110(val, _values, result)
     result = Node::ArithmeticGroup.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 188)
  def _reduce_111(val, _values, result)
     result = Node::ArithmeticUnaryPlus.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 189)
  def _reduce_112(val, _values, result)
     result = Node::ArithmeticUnaryMinus.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 190)
  def _reduce_113(val, _values, result)
     result = Node::ArithmeticBitwiseNot.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 191)
  def _reduce_114(val, _values, result)
     result = Node::ArithmeticLogicalNot.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 192)
  def _reduce_115(val, _values, result)
     result = Node::ArithmeticTimes.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 193)
  def _reduce_116(val, _values, result)
     result = Node::ArithmeticDiv.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 194)
  def _reduce_117(val, _values, result)
     result = Node::ArithmeticMod.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 195)
  def _reduce_118(val, _values, result)
     result = Node::ArithmeticPlus.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 196)
  def _reduce_119(val, _values, result)
     result = Node::ArithmeticMinus.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 197)
  def _reduce_120(val, _values, result)
     result = Node::ArithmeticLeftShift.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 198)
  def _reduce_121(val, _values, result)
     result = Node::ArithmeticRightShift.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 199)
  def _reduce_122(val, _values, result)
     result = Node::ArithmeticLess.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 200)
  def _reduce_123(val, _values, result)
     result = Node::ArithmeticLessOrEqual.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 201)
  def _reduce_124(val, _values, result)
     result = Node::ArithmeticGreater.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 202)
  def _reduce_125(val, _values, result)
     result = Node::ArithmeticGreaterOrEqual.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 203)
  def _reduce_126(val, _values, result)
     result = Node::ArithmeticEqual.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 204)
  def _reduce_127(val, _values, result)
     result = Node::ArithmeticNotEqual.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 205)
  def _reduce_128(val, _values, result)
     result = Node::ArithmeticBitwiseAnd.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 206)
  def _reduce_129(val, _values, result)
     result = Node::ArithmeticBitwiseXor.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 207)
  def _reduce_130(val, _values, result)
     result = Node::ArithmeticBitwiseOr.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 208)
  def _reduce_131(val, _values, result)
     result = Node::ArithmeticLogicalAnd.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 209)
  def _reduce_132(val, _values, result)
     result = Node::ArithmeticLogicalOr.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 210)
  def _reduce_133(val, _values, result)
     result = Node::ArithmeticTernary.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 211)
  def _reduce_134(val, _values, result)
     result = Node::ArithmeticAssign.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 212)
  def _reduce_135(val, _values, result)
     result = Node::ArithmeticAssignTimes.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 213)
  def _reduce_136(val, _values, result)
     result = Node::ArithmeticAssignDiv.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 214)
  def _reduce_137(val, _values, result)
     result = Node::ArithmeticAssignMod.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 215)
  def _reduce_138(val, _values, result)
     result = Node::ArithmeticAssignPlus.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 216)
  def _reduce_139(val, _values, result)
     result = Node::ArithmeticAssignMinus.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 217)
  def _reduce_140(val, _values, result)
     result = Node::ArithmeticAssignLeftShift.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 218)
  def _reduce_141(val, _values, result)
     result = Node::ArithmeticAssignRightShift.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 219)
  def _reduce_142(val, _values, result)
     result = Node::ArithmeticAssignBitwiseAnd.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 220)
  def _reduce_143(val, _values, result)
     result = Node::ArithmeticAssignBitwiseXor.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 221)
  def _reduce_144(val, _values, result)
     result = Node::ArithmeticAssignBitwiseOr.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 222)
  def _reduce_145(val, _values, result)
     result = Node::ArithmeticInteger.new(val.first) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ShellParser
