#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'shellnode'

class ShellParser < Racc::Parser

module_eval(<<'...end shell.racc/module_eval...', 'shell.racc', 178)

# vim:set ft=racc:
...end shell.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
   132,   151,   101,    52,    52,    56,    57,     9,    15,    21,
    52,    31,   118,    56,    57,    42,     1,     4,     8,    13,
    18,    25,    32,    52,   127,   129,    52,   173,    52,    10,
    52,    22,    27,    33,    35,   101,    40,   134,   134,     5,
    93,    14,    19,     9,    15,    21,    93,    31,   159,    69,
   160,    42,     1,     4,     8,    13,    18,    25,    32,    84,
    85,    84,    85,    84,    85,    10,    93,    22,    27,    33,
    35,   159,    40,   163,   110,     5,   118,    14,    19,     9,
    15,    21,    52,    31,   127,   129,   130,    42,     1,     4,
     8,    13,    18,    25,    32,   109,    52,    56,    57,   139,
   176,    10,   107,    22,    27,    33,    35,    52,    40,    56,
    57,     5,   105,    14,    19,     9,    15,    21,    52,    31,
    52,   101,   155,    42,     1,     4,     8,    13,    18,    25,
    32,   138,    52,   101,    52,   139,   126,    10,    52,    22,
    27,    33,    35,    52,    40,    52,    90,     5,    65,    14,
    19,     9,    15,    21,   147,    31,    81,    52,   140,    42,
     1,     4,     8,    13,    18,    25,    32,   138,    80,    52,
    93,    75,   139,    10,    44,    22,    27,    33,    35,   158,
    40,    69,   161,     5,   101,    14,    19,     9,    15,    21,
    52,    31,    44,    65,   164,    42,     1,     4,     8,    13,
    18,    25,    32,    44,    44,    59,   171,    44,    44,    10,
   174,    22,    27,    33,    35,    44,    40,    52,    52,     5,
    52,    14,    19,     9,    15,    21,    52,    31,   nil,   nil,
   nil,    42,     1,     4,     8,    13,    18,    25,    32,   nil,
   nil,   nil,   nil,   nil,   nil,    10,   nil,    22,    27,    33,
    35,   nil,    40,   nil,   nil,     5,   nil,    14,    19,     9,
    15,    21,    52,    31,   nil,   nil,   nil,    42,     1,     4,
     8,    13,    18,    25,    32,   nil,   nil,   nil,   nil,   nil,
   nil,    10,   nil,    22,    27,    33,    35,   nil,    40,   nil,
   nil,     5,    62,    14,    19,   nil,    31,   nil,   nil,   nil,
    42,     1,     4,     8,    13,    18,    25,     9,    15,    21,
    52,    31,   nil,   nil,   nil,    42,     1,     4,     8,    13,
    18,    25,    32,   nil,   nil,   nil,    14,    19,   nil,    10,
   nil,    22,    27,    33,    35,   nil,    40,   nil,   nil,     5,
   nil,    14,    19,     9,    15,    21,   nil,    31,   nil,   nil,
   nil,    42,     1,     4,     8,    13,    18,    25,    32,   nil,
   nil,   nil,   nil,   nil,   nil,    10,   nil,    22,    27,    33,
    35,   nil,    47,    48,   nil,     5,    31,    14,    19,   nil,
    42,     1,     4,     8,    13,    18,    25,     9,    15,    21,
    52,    31,   nil,   nil,   nil,    42,     1,     4,     8,    13,
    18,    25,    32,   nil,   nil,   nil,    14,    19,   nil,    10,
   nil,    22,    27,    33,    35,   nil,    40,   nil,   nil,     5,
   nil,    14,    19,     9,    15,    21,   nil,    31,   nil,   nil,
   nil,    42,     1,     4,     8,    13,    18,    25,    32,   nil,
   nil,   nil,   nil,   nil,   nil,    10,   nil,    22,    27,    33,
    35,   nil,    40,   nil,   nil,     5,   nil,    14,    19,     9,
    15,    21,    52,    31,   nil,   nil,   nil,    42,     1,     4,
     8,    13,    18,    25,    32,   nil,   nil,   nil,   nil,   nil,
   nil,    10,   nil,    22,    27,    33,    35,   nil,    40,   nil,
   nil,     5,    99,    14,    19,   nil,    31,   nil,   nil,   nil,
    42,     1,     4,     8,    13,    18,    25,     9,    15,    21,
    52,    31,   nil,   nil,   nil,    42,     1,     4,     8,    13,
    18,    25,    32,   nil,   nil,   nil,    14,    19,   nil,    10,
   nil,    22,    27,    33,    35,   nil,    40,   nil,   nil,     5,
   nil,    14,    19,     9,    15,    21,   nil,    31,   nil,   nil,
   nil,    42,     1,     4,     8,    13,    18,    25,    32,   nil,
   nil,   nil,   nil,   nil,   nil,    10,   nil,    22,    27,    33,
    35,   nil,    40,   nil,   nil,     5,   nil,    14,    19,     9,
    15,    21,    52,    31,   nil,   nil,   nil,    42,     1,     4,
     8,    13,    18,    25,    32,   nil,   nil,   nil,   nil,   nil,
   nil,    10,   nil,    22,    27,    33,    35,   nil,    40,   nil,
   nil,     5,   nil,    14,    19,     9,    15,    21,    93,    31,
   nil,   nil,   nil,    42,     1,     4,     8,    13,    18,    25,
    32,   nil,   nil,   nil,   nil,   nil,   nil,    10,   nil,    22,
    27,    33,    35,   nil,    40,   nil,   nil,     5,    99,    14,
    19,   nil,    31,   nil,   nil,   nil,    42,     1,     4,     8,
    13,    18,    25,     9,    15,    21,    52,    31,   nil,   nil,
   nil,    42,     1,     4,     8,    13,    18,    25,    32,   nil,
   nil,   nil,    14,    19,   nil,    10,   nil,    22,    27,    33,
    35,   nil,    40,   nil,   nil,     5,   nil,    14,    19,     9,
    15,    21,   nil,    31,   nil,   nil,   nil,    42,     1,     4,
     8,    13,    18,    25,    32,   nil,   nil,   nil,   nil,   nil,
   nil,    10,   nil,    22,    27,    33,    35,   nil,    62,   nil,
   nil,     5,    31,    14,    19,   nil,    42,     1,     4,     8,
    13,    18,    25,     9,    15,    21,    52,    31,   nil,   nil,
   nil,    42,     1,     4,     8,    13,    18,    25,    32,   nil,
   nil,   nil,    14,    19,   nil,    10,   nil,    22,    27,    33,
    35,   nil,    40,   nil,   nil,     5,   nil,    14,    19,     9,
    15,    21,   nil,    31,   nil,   nil,   nil,    42,     1,     4,
     8,    13,    18,    25,    32,   nil,   nil,   nil,   nil,   nil,
   nil,    10,   nil,    22,    27,    33,    35,   nil,    40,   nil,
   nil,     5,    31,    14,    19,   nil,    42,     1,     4,     8,
    13,    18,    25,    31,   nil,   nil,   nil,    42,     1,     4,
     8,    13,    18,    25,   nil,   nil,   nil,   nil,   nil,   nil,
    31,   nil,    14,    19,    42,     1,     4,     8,    13,    18,
    25,    31,   nil,    14,    19,    42,     1,     4,     8,    13,
    18,    25,    42,     1,     4,     8,    13,    18,    25,   nil,
    14,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    14,    19,    32,   nil,   nil,   nil,   nil,    14,    19,
    10,   nil,    22,    27,    33,    35,   nil,   nil,   nil,   nil,
     5 ]

racc_action_check = [
   122,   133,   106,   122,   133,     7,     7,    22,    22,    22,
    22,    22,   106,   113,   113,    22,    22,    22,    22,    22,
    22,    22,    22,   166,   161,   161,    41,   166,    94,    22,
    54,    22,    22,    22,    22,   131,    22,   122,   133,    22,
    86,    22,    22,   167,   167,   167,   167,   167,   145,    82,
   145,   167,   167,   167,   167,   167,   167,   167,   167,    41,
    41,    94,    94,    54,    54,   167,    96,   167,   167,   167,
   167,   154,   167,   154,    81,   167,    98,   167,   167,     5,
     5,     5,     5,     5,   121,   121,   121,     5,     5,     5,
     5,     5,     5,     5,     5,    80,   170,   111,   111,   141,
   170,     5,    77,     5,     5,     5,     5,    76,     5,    51,
    51,     5,    74,     5,     5,    83,    83,    83,    83,    83,
   110,    71,   141,    83,    83,    83,    83,    83,    83,    83,
    83,   141,    69,    68,   117,   125,   119,    83,    59,    83,
    83,    83,    83,    57,    83,    56,    53,    83,    42,    83,
    83,    95,    95,    95,   128,    95,    38,    91,   125,    95,
    95,    95,    95,    95,    95,    95,    95,   125,    37,   134,
   135,    33,   138,    95,    25,    95,    95,    95,    95,   142,
    95,    24,   148,    95,   150,    95,    95,   163,   163,   163,
   163,   163,    19,    18,   159,   163,   163,   163,   163,   163,
   163,   163,   163,    14,    13,    10,   165,     8,     4,   163,
   169,   163,   163,   163,   163,     1,   163,   171,   173,   163,
   174,   163,   163,    97,    97,    97,   176,    97,   nil,   nil,
   nil,    97,    97,    97,    97,    97,    97,    97,    97,   nil,
   nil,   nil,   nil,   nil,   nil,    97,   nil,    97,    97,    97,
    97,   nil,    97,   nil,   nil,    97,   nil,    97,    97,   160,
   160,   160,   160,   160,   nil,   nil,   nil,   160,   160,   160,
   160,   160,   160,   160,   160,   nil,   nil,   nil,   nil,   nil,
   nil,   160,   nil,   160,   160,   160,   160,   nil,   160,   nil,
   nil,   160,    16,   160,   160,   nil,    16,   nil,   nil,   nil,
    16,    16,    16,    16,    16,    16,    16,   101,   101,   101,
   101,   101,   nil,   nil,   nil,   101,   101,   101,   101,   101,
   101,   101,   101,   nil,   nil,   nil,    16,    16,   nil,   101,
   nil,   101,   101,   101,   101,   nil,   101,   nil,   nil,   101,
   nil,   101,   101,   103,   103,   103,   nil,   103,   nil,   nil,
   nil,   103,   103,   103,   103,   103,   103,   103,   103,   nil,
   nil,   nil,   nil,   nil,   nil,   103,   nil,   103,   103,   103,
   103,   nil,     2,     2,   nil,   103,     2,   103,   103,   nil,
     2,     2,     2,     2,     2,     2,     2,   105,   105,   105,
   105,   105,   nil,   nil,   nil,   105,   105,   105,   105,   105,
   105,   105,   105,   nil,   nil,   nil,     2,     2,   nil,   105,
   nil,   105,   105,   105,   105,   nil,   105,   nil,   nil,   105,
   nil,   105,   105,   114,   114,   114,   nil,   114,   nil,   nil,
   nil,   114,   114,   114,   114,   114,   114,   114,   114,   nil,
   nil,   nil,   nil,   nil,   nil,   114,   nil,   114,   114,   114,
   114,   nil,   114,   nil,   nil,   114,   nil,   114,   114,    27,
    27,    27,    27,    27,   nil,   nil,   nil,    27,    27,    27,
    27,    27,    27,    27,    27,   nil,   nil,   nil,   nil,   nil,
   nil,    27,   nil,    27,    27,    27,    27,   nil,    27,   nil,
   nil,    27,    63,    27,    27,   nil,    63,   nil,   nil,   nil,
    63,    63,    63,    63,    63,    63,    63,    32,    32,    32,
    32,    32,   nil,   nil,   nil,    32,    32,    32,    32,    32,
    32,    32,    32,   nil,   nil,   nil,    63,    63,   nil,    32,
   nil,    32,    32,    32,    32,   nil,    32,   nil,   nil,    32,
   nil,    32,    32,     0,     0,     0,   nil,     0,   nil,   nil,
   nil,     0,     0,     0,     0,     0,     0,     0,     0,   nil,
   nil,   nil,   nil,   nil,   nil,     0,   nil,     0,     0,     0,
     0,   nil,     0,   nil,   nil,     0,   nil,     0,     0,    35,
    35,    35,    35,    35,   nil,   nil,   nil,    35,    35,    35,
    35,    35,    35,    35,    35,   nil,   nil,   nil,   nil,   nil,
   nil,    35,   nil,    35,    35,    35,    35,   nil,    35,   nil,
   nil,    35,   nil,    35,    35,    55,    55,    55,    55,    55,
   nil,   nil,   nil,    55,    55,    55,    55,    55,    55,    55,
    55,   nil,   nil,   nil,   nil,   nil,   nil,    55,   nil,    55,
    55,    55,    55,   nil,    55,   nil,   nil,    55,    89,    55,
    55,   nil,    89,   nil,   nil,   nil,    89,    89,    89,    89,
    89,    89,    89,   129,   129,   129,   129,   129,   nil,   nil,
   nil,   129,   129,   129,   129,   129,   129,   129,   129,   nil,
   nil,   nil,    89,    89,   nil,   129,   nil,   129,   129,   129,
   129,   nil,   129,   nil,   nil,   129,   nil,   129,   129,    40,
    40,    40,   nil,    40,   nil,   nil,   nil,    40,    40,    40,
    40,    40,    40,    40,    40,   nil,   nil,   nil,   nil,   nil,
   nil,    40,   nil,    40,    40,    40,    40,   nil,    46,   nil,
   nil,    40,    46,    40,    40,   nil,    46,    46,    46,    46,
    46,    46,    46,   127,   127,   127,   127,   127,   nil,   nil,
   nil,   127,   127,   127,   127,   127,   127,   127,   127,   nil,
   nil,   nil,    46,    46,   nil,   127,   nil,   127,   127,   127,
   127,   nil,   127,   nil,   nil,   127,   nil,   127,   127,    92,
    92,    92,   nil,    92,   nil,   nil,   nil,    92,    92,    92,
    92,    92,    92,    92,    92,   nil,   nil,   nil,   nil,   nil,
   nil,    92,   nil,    92,    92,    92,    92,   nil,    92,   nil,
   nil,    92,   136,    92,    92,   nil,   136,   136,   136,   136,
   136,   136,   136,   153,   nil,   nil,   nil,   153,   153,   153,
   153,   153,   153,   153,   nil,   nil,   nil,   nil,   nil,   nil,
    79,   nil,   136,   136,    79,    79,    79,    79,    79,    79,
    79,    36,   nil,   153,   153,    36,    36,    36,    36,    36,
    36,    36,    31,    31,    31,    31,    31,    31,    31,   nil,
    79,    79,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    36,    36,   124,   nil,   nil,   nil,   nil,    31,    31,
   124,   nil,   124,   124,   124,   124,   nil,   nil,   nil,   nil,
   124 ]

racc_action_pointer = [
   541,   213,   370,   nil,   206,    77,   nil,    -2,   205,   nil,
   203,   nil,   nil,   202,   201,   nil,   290,   nil,   191,   190,
   nil,   nil,     5,   nil,   148,   172,   nil,   457,   nil,   nil,
   nil,   852,   505,   167,   nil,   577,   845,   168,   122,   nil,
   697,    21,   146,   nil,   nil,   nil,   726,   nil,   nil,   nil,
   nil,   102,   nil,   111,    25,   613,   140,   138,   nil,   133,
   nil,   nil,   nil,   490,   nil,   nil,   nil,   nil,   111,   127,
   nil,    99,   nil,   nil,    94,   nil,   102,    72,   nil,   834,
    95,    39,    16,   113,   nil,   nil,    35,   nil,   nil,   646,
   nil,   152,   777,   nil,    23,   149,    61,   221,    44,   nil,
   nil,   305,   nil,   341,   nil,   385,   -20,   nil,   nil,   nil,
   115,    90,   nil,     6,   421,   nil,   nil,   129,   nil,   113,
   nil,    65,    -2,   nil,   866,   133,   nil,   741,   133,   661,
   nil,    13,   nil,    -1,   164,   165,   806,   nil,   170,   nil,
   nil,    97,   154,   nil,   nil,    15,   nil,   nil,   164,   nil,
   162,   nil,   nil,   817,    38,   nil,   nil,   nil,   nil,   192,
   257,     5,   nil,   185,   nil,   197,    18,    41,   nil,   201,
    91,   212,   nil,   213,   215,   nil,   221,   nil,   nil,   nil,
   nil ]

racc_action_default = [
  -108,  -108,   -68,   -17,  -108,  -108,   -18,    -4,  -108,   -71,
  -108,   -19,    -5,  -108,  -108,   -75,   -70,   -20,  -108,  -108,
   -73,   -63,  -108,   -21,    -8,  -108,   -83,  -108,   -22,   -10,
   -85,  -108,  -108,  -108,   -12,  -108,   -13,  -108,  -108,   -15,
  -108,    -2,  -108,   -16,   -94,   -91,   -67,   -72,   -76,   -74,
   -88,   -29,   -98,  -108,   -24,  -108,  -101,  -101,   -90,  -101,
   -92,   -87,   -79,   -69,   -77,   -97,   -96,   -89,  -108,  -101,
   -93,  -108,   -84,   -86,  -108,   -33,  -101,  -108,   -81,   -14,
  -108,  -108,    -9,  -101,  -102,  -103,  -105,    -1,   -95,   -66,
   -23,  -101,   -26,   -99,   -25,  -108,  -100,  -108,  -108,   -80,
   -78,  -108,   -58,  -108,   -59,  -108,  -108,   -64,   -82,   181,
  -101,    -3,  -104,   -28,   -27,    -6,    -7,  -101,   -34,  -108,
   -11,  -108,  -108,   -30,  -108,  -108,   -65,  -108,  -108,  -108,
   -55,  -108,   -36,  -108,  -101,  -107,   -61,   -60,  -108,   -52,
   -39,  -108,  -108,   -41,   -43,  -108,   -57,   -54,  -108,   -31,
  -108,   -35,  -106,   -62,  -108,   -37,   -40,   -42,   -38,  -108,
  -101,  -108,   -32,  -101,   -53,   -44,  -101,  -100,   -56,   -46,
  -101,  -101,   -45,  -101,  -101,   -47,  -101,   -48,   -49,   -50,
   -51 ]

racc_goto_table = [
    53,    55,    49,     7,    94,    79,   102,    87,   128,   104,
    63,    66,   115,   143,   116,   131,    64,    68,    55,   137,
    92,   141,    71,    55,   117,   144,   150,    74,    55,   156,
    77,    55,   122,   142,   136,    88,    78,    86,   120,   154,
    89,   157,    82,   133,   123,    46,    64,    76,   168,    83,
    86,    72,    45,    95,    97,    50,    98,    73,    41,    58,
   114,    37,   nil,   100,    60,    61,   103,   nil,   nil,   149,
    67,   nil,   nil,   106,   nil,   nil,    70,   nil,   nil,   108,
   nil,   nil,   nil,   nil,   nil,   nil,   111,   nil,   162,   100,
    86,   nil,   nil,   nil,   nil,   113,   119,    55,   nil,   nil,
   121,    55,   nil,   nil,   nil,   153,   nil,   124,   nil,   nil,
   nil,   nil,   nil,   nil,   125,   nil,    94,   113,   135,   nil,
   nil,   nil,   146,    55,   148,    55,   nil,   nil,   nil,   135,
   nil,   152,   nil,   nil,   nil,   nil,    78,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   108,   nil,   166,   167,   165,   170,   167,
   169,   nil,   nil,   172,   nil,   nil,   nil,   175,   177,   nil,
   178,   179,   nil,   180 ]

racc_goto_check = [
    21,    23,    41,     5,    22,    12,    25,     3,    34,    25,
    39,    45,     6,    31,     6,    27,    41,    21,    23,    36,
     3,    29,    21,    23,    26,    32,    27,    21,    23,    31,
    21,    23,    26,    30,    11,    45,    41,    23,     9,    33,
    39,    32,     8,    28,    25,    38,    41,    24,    34,     4,
    23,    42,    44,     7,     7,    44,     7,    43,     2,    44,
     3,     1,   nil,    41,    44,    44,     7,   nil,   nil,    25,
    44,   nil,   nil,     7,   nil,   nil,    44,   nil,   nil,    41,
   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,    25,    41,
    23,   nil,   nil,   nil,   nil,     5,    21,    23,   nil,   nil,
    21,    23,   nil,   nil,   nil,    12,   nil,     7,   nil,   nil,
   nil,   nil,   nil,   nil,     7,   nil,    22,     5,    23,   nil,
   nil,   nil,    21,    23,    21,    23,   nil,   nil,   nil,    23,
   nil,     7,   nil,   nil,   nil,   nil,    41,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    41,   nil,    21,    23,     7,    21,    23,
     7,   nil,   nil,     7,   nil,   nil,   nil,     7,     7,   nil,
     7,     7,   nil,     7 ]

racc_goto_pointer = [
   nil,    61,    58,   -34,     8,     3,   -83,    -3,     2,   -65,
   nil,   -90,   -31,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    -5,   -51,    -4,    14,   -62,   -74,  -107,   -79,  -104,
   -92,  -112,  -100,   -99,  -113,   nil,  -105,   nil,    43,    -6,
   nil,     0,    20,    26,    51,    -7 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    91,    51,    12,   112,    24,    29,
    34,    36,   nil,    39,    43,     3,     6,    11,    17,    23,
    28,   nil,    54,    96,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   145,   nil,    38,   nil,     2,   nil,   nil,
    16,    20,    26,    30,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 41, :_reduce_1,
  1, 41, :_reduce_2,
  3, 42, :_reduce_3,
  1, 42, :_reduce_4,
  1, 45, :_reduce_5,
  4, 45, :_reduce_6,
  4, 45, :_reduce_7,
  1, 46, :_reduce_8,
  2, 46, :_reduce_9,
  1, 48, :_reduce_10,
  4, 48, :_reduce_11,
  1, 49, :_reduce_12,
  1, 49, :_reduce_13,
  2, 49, :_reduce_14,
  1, 49, :_reduce_15,
  1, 51, :_reduce_16,
  1, 51, :_reduce_17,
  1, 51, :_reduce_18,
  1, 51, :_reduce_19,
  1, 51, :_reduce_20,
  1, 51, :_reduce_21,
  1, 51, :_reduce_22,
  3, 55, :_reduce_23,
  1, 61, :_reduce_24,
  2, 61, :_reduce_25,
  2, 61, :_reduce_26,
  3, 61, :_reduce_27,
  3, 62, :_reduce_28,
  1, 62, :_reduce_29,
  4, 56, :_reduce_30,
  6, 56, :_reduce_31,
  7, 56, :_reduce_32,
  1, 64, :_reduce_33,
  1, 66, :_reduce_none,
  2, 68, :_reduce_35,
  1, 68, :_reduce_36,
  7, 57, :_reduce_37,
  7, 57, :_reduce_38,
  6, 57, :_reduce_39,
  2, 70, :_reduce_40,
  1, 70, :_reduce_41,
  2, 69, :_reduce_42,
  1, 69, :_reduce_43,
  3, 71, :_reduce_44,
  4, 71, :_reduce_45,
  4, 71, :_reduce_46,
  5, 71, :_reduce_47,
  5, 72, :_reduce_48,
  5, 72, :_reduce_49,
  6, 72, :_reduce_50,
  6, 72, :_reduce_51,
  1, 73, :_reduce_52,
  3, 73, :_reduce_53,
  6, 58, :_reduce_54,
  5, 58, :_reduce_55,
  4, 74, :_reduce_56,
  2, 74, :_reduce_57,
  3, 59, :_reduce_58,
  3, 60, :_reduce_59,
  5, 53, :_reduce_60,
  1, 76, :_reduce_61,
  2, 76, :_reduce_62,
  1, 75, :_reduce_63,
  3, 54, :_reduce_64,
  3, 65, :_reduce_65,
  3, 50, :_reduce_66,
  2, 50, :_reduce_67,
  1, 50, :_reduce_68,
  2, 50, :_reduce_69,
  1, 50, :_reduce_70,
  1, 80, :_reduce_71,
  1, 78, :_reduce_72,
  1, 77, :_reduce_73,
  2, 77, :_reduce_74,
  1, 77, :_reduce_75,
  2, 77, :_reduce_76,
  1, 79, :_reduce_77,
  2, 79, :_reduce_78,
  1, 79, :_reduce_79,
  2, 79, :_reduce_80,
  1, 52, :_reduce_81,
  2, 52, :_reduce_82,
  1, 81, :_reduce_83,
  2, 81, :_reduce_84,
  1, 81, :_reduce_85,
  2, 81, :_reduce_86,
  2, 82, :_reduce_87,
  2, 82, :_reduce_88,
  2, 82, :_reduce_89,
  2, 82, :_reduce_90,
  2, 82, :_reduce_91,
  2, 82, :_reduce_92,
  2, 82, :_reduce_93,
  1, 84, :_reduce_94,
  2, 83, :_reduce_95,
  2, 83, :_reduce_96,
  1, 85, :_reduce_97,
  1, 63, :_reduce_98,
  2, 63, :_reduce_99,
  1, 47, :_reduce_100,
  0, 47, :_reduce_101,
  1, 44, :_reduce_102,
  1, 44, :_reduce_103,
  2, 43, :_reduce_104,
  1, 43, :_reduce_105,
  2, 67, :_reduce_106,
  1, 67, :_reduce_107 ]

racc_reduce_n = 108

racc_shift_n = 181

racc_token_table = {
  false => 0,
  :error => 1,
  :WORD => 2,
  :ASSIGNMENT_WORD => 3,
  :NAME => 4,
  :NEWLINE => 5,
  :IO_NUMBER => 6,
  :AND_IF => 7,
  :OR_IF => 8,
  :DSEMI => 9,
  :DLESS => 10,
  :DGREAT => 11,
  :LESSAND => 12,
  :GREATAND => 13,
  :LESSGREAT => 14,
  :DLESSDASH => 15,
  :CLOBBER => 16,
  :If => 17,
  :Then => 18,
  :Else => 19,
  :Elif => 20,
  :Fi => 21,
  :Do => 22,
  :Done => 23,
  :Case => 24,
  :Esac => 25,
  :While => 26,
  :Until => 27,
  :For => 28,
  :Lbrace => 29,
  :Rbrace => 30,
  :Bang => 31,
  :In => 32,
  "|" => 33,
  "(" => 34,
  ")" => 35,
  "<" => 36,
  ">" => 37,
  "&" => 38,
  ";" => 39 }

racc_nt_base = 40

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "WORD",
  "ASSIGNMENT_WORD",
  "NAME",
  "NEWLINE",
  "IO_NUMBER",
  "AND_IF",
  "OR_IF",
  "DSEMI",
  "DLESS",
  "DGREAT",
  "LESSAND",
  "GREATAND",
  "LESSGREAT",
  "DLESSDASH",
  "CLOBBER",
  "If",
  "Then",
  "Else",
  "Elif",
  "Fi",
  "Do",
  "Done",
  "Case",
  "Esac",
  "While",
  "Until",
  "For",
  "Lbrace",
  "Rbrace",
  "Bang",
  "In",
  "\"|\"",
  "\"(\"",
  "\")\"",
  "\"<\"",
  "\">\"",
  "\"&\"",
  "\";\"",
  "$start",
  "complete_command",
  "list",
  "separator",
  "separator_op",
  "and_or",
  "pipeline",
  "linebreak",
  "pipe_sequence",
  "command",
  "simple_command",
  "compound_command",
  "redirect_list",
  "function_definition",
  "brace_group",
  "subshell",
  "for_clause",
  "case_clause",
  "if_clause",
  "while_clause",
  "until_clause",
  "compound_list",
  "term",
  "newline_list",
  "name",
  "do_group",
  "in",
  "sequential_sep",
  "wordlist",
  "case_list",
  "case_list_ns",
  "case_item_ns",
  "case_item",
  "pattern",
  "else_part",
  "fname",
  "function_body",
  "cmd_prefix",
  "cmd_word",
  "cmd_suffix",
  "cmd_name",
  "io_redirect",
  "io_file",
  "io_here",
  "filename",
  "here_end" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'shell.racc', 17)
  def _reduce_1(val, _values, result)
     result = Node::CompleteCommand.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 18)
  def _reduce_2(val, _values, result)
     result = Node::CompleteCommand.new(val.first, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 20)
  def _reduce_3(val, _values, result)
     result = Node::List.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 21)
  def _reduce_4(val, _values, result)
     result = Node::List.new(nil, nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 23)
  def _reduce_5(val, _values, result)
     result = Node::AndOr.new(nil, nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 24)
  def _reduce_6(val, _values, result)
     result = Node::AndOr.new(val[0], val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 25)
  def _reduce_7(val, _values, result)
     result = Node::AndOr.new(val[0], val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 27)
  def _reduce_8(val, _values, result)
     result = Node::Pipeline.new(val.last, false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 28)
  def _reduce_9(val, _values, result)
     result = Node::Pipeline.new(val.last, true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 30)
  def _reduce_10(val, _values, result)
     result = Node::PipeSequence.new(nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 31)
  def _reduce_11(val, _values, result)
     result = Node::PipeSequence.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 33)
  def _reduce_12(val, _values, result)
     result = Node::Command.new(val.first, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 34)
  def _reduce_13(val, _values, result)
     result = Node::Command.new(val.first, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 35)
  def _reduce_14(val, _values, result)
     result = Node::Command.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 36)
  def _reduce_15(val, _values, result)
     result = Node::Command.new(val.first, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 38)
  def _reduce_16(val, _values, result)
     result = Node::CompoundCommand.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 39)
  def _reduce_17(val, _values, result)
     result = Node::CompoundCommand.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 40)
  def _reduce_18(val, _values, result)
     result = Node::CompoundCommand.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 41)
  def _reduce_19(val, _values, result)
     result = Node::CompoundCommand.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 42)
  def _reduce_20(val, _values, result)
     result = Node::CompoundCommand.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 43)
  def _reduce_21(val, _values, result)
     result = Node::CompoundCommand.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 44)
  def _reduce_22(val, _values, result)
     result = Node::CompoundCommand.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 46)
  def _reduce_23(val, _values, result)
     result = Node::Subshell.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 48)
  def _reduce_24(val, _values, result)
     result = Node::CompoundList.new(nil, val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 49)
  def _reduce_25(val, _values, result)
     result = Node::CompoundList.new(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 50)
  def _reduce_26(val, _values, result)
     result = Node::CompoundList.new(nil, val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 51)
  def _reduce_27(val, _values, result)
     result = Node::CompoundList.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 53)
  def _reduce_28(val, _values, result)
     result = Node::Term.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 54)
  def _reduce_29(val, _values, result)
     result = Node::Term.new(nil, nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 56)
  def _reduce_30(val, _values, result)
     result = Node::For.new(val[1], nil, val[-1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 57)
  def _reduce_31(val, _values, result)
     result = Node::For.new(val[1], val[-2], val[-1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 58)
  def _reduce_32(val, _values, result)
     result = Node::For.new(val[1], val[3], val[-2], val[-1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 60)
  def _reduce_33(val, _values, result)
     result = Node::Name.new(val.first) 
    result
  end
.,.,

# reduce 34 omitted

module_eval(<<'.,.,', 'shell.racc', 64)
  def _reduce_35(val, _values, result)
     result = Node::Wordlist.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 65)
  def _reduce_36(val, _values, result)
     result = Node::Wordlist.new(nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 67)
  def _reduce_37(val, _values, result)
     result = Node::CaseClause.new(val[1], val[-1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 68)
  def _reduce_38(val, _values, result)
     result = Node::CaseClause.new(val[1], val[-1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 69)
  def _reduce_39(val, _values, result)
     result = Node::CaseClause.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 71)
  def _reduce_40(val, _values, result)
     result = Node::CaseListNs.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 72)
  def _reduce_41(val, _values, result)
     result = Node::CaseListNs.new(nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 74)
  def _reduce_42(val, _values, result)
     result = Node::CaseList.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 75)
  def _reduce_43(val, _values, result)
     result = Node::CaseList.new(nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 77)
  def _reduce_44(val, _values, result)
     result = Node::CaseItemNs.new(val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 78)
  def _reduce_45(val, _values, result)
     result = Node::CaseItemNs.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 79)
  def _reduce_46(val, _values, result)
     result = Node::CaseItemNs.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 80)
  def _reduce_47(val, _values, result)
     result = Node::CaseItemNs.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 82)
  def _reduce_48(val, _values, result)
     result = Node::CaseItem.new(val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 83)
  def _reduce_49(val, _values, result)
     result = Node::CaseItem.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 84)
  def _reduce_50(val, _values, result)
     result = Node::CaseItem.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 85)
  def _reduce_51(val, _values, result)
     result = Node::CaseItem.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 87)
  def _reduce_52(val, _values, result)
     result = Node::Pattern.new(nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 88)
  def _reduce_53(val, _values, result)
     result = Node::Pattern.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 90)
  def _reduce_54(val, _values, result)
     result = Node::IfClause.new(val[1], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 91)
  def _reduce_55(val, _values, result)
     result = Node::IfClause.new(val[1], val[3], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 93)
  def _reduce_56(val, _values, result)
     result = Node::ElsePart.new(val[1], val[-1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 94)
  def _reduce_57(val, _values, result)
     result = Node::ElsePart.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 96)
  def _reduce_58(val, _values, result)
     result = Node::WhileClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 98)
  def _reduce_59(val, _values, result)
     result = Node::UntilClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 100)
  def _reduce_60(val, _values, result)
     result = Node::FunctionDefinition.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 102)
  def _reduce_61(val, _values, result)
     result = Node::FunctionBody.new(val.first, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 103)
  def _reduce_62(val, _values, result)
     result = Node::FunctionBody.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 105)
  def _reduce_63(val, _values, result)
     result = Node::Fname.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 107)
  def _reduce_64(val, _values, result)
     result = Node::BraceGroup.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 109)
  def _reduce_65(val, _values, result)
     result = Node::DoGroup.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 111)
  def _reduce_66(val, _values, result)
     result = Node::SimpleCommand.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 112)
  def _reduce_67(val, _values, result)
     result = Node::SimpleCommand.new(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 113)
  def _reduce_68(val, _values, result)
     result = Node::SimpleCommand.new(val[0], nil, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 114)
  def _reduce_69(val, _values, result)
     result = Node::SimpleCommand.new(nil, val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 115)
  def _reduce_70(val, _values, result)
     result = Node::SimpleCommand.new(nil, val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 117)
  def _reduce_71(val, _values, result)
     result = Node::CmdName.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 119)
  def _reduce_72(val, _values, result)
     result = Node::CmdWord.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 121)
  def _reduce_73(val, _values, result)
     result = Node::CmdPrefix.new(nil, val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 122)
  def _reduce_74(val, _values, result)
     result = Node::CmdPrefix.new(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 123)
  def _reduce_75(val, _values, result)
     result = Node::CmdPrefix.new(nil, nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 124)
  def _reduce_76(val, _values, result)
     result = Node::CmdPrefix.new(val[0], nil, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 126)
  def _reduce_77(val, _values, result)
     result = Node::CmdSuffix.new(nil, val[0], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 127)
  def _reduce_78(val, _values, result)
     result = Node::CmdSuffix.new(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 128)
  def _reduce_79(val, _values, result)
     result = Node::CmdSuffix.new(nil, nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 129)
  def _reduce_80(val, _values, result)
     result = Node::CmdSuffix.new(val[0], nil, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 131)
  def _reduce_81(val, _values, result)
     result = Node::RedirectList.new(nil, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 132)
  def _reduce_82(val, _values, result)
     result = Node::RedirectList.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 134)
  def _reduce_83(val, _values, result)
     result = Node::IoRedirect.new(nil, val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 135)
  def _reduce_84(val, _values, result)
     result = Node::IoRedirect.new(val[0], val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 136)
  def _reduce_85(val, _values, result)
     result = Node::IoRedirect.new(nil, nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 137)
  def _reduce_86(val, _values, result)
     result = Node::IoRedirect.new(val[0], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 139)
  def _reduce_87(val, _values, result)
     result = Node::IoFile.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 140)
  def _reduce_88(val, _values, result)
     result = Node::IoFile.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 141)
  def _reduce_89(val, _values, result)
     result = Node::IoFile.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 142)
  def _reduce_90(val, _values, result)
     result = Node::IoFile.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 143)
  def _reduce_91(val, _values, result)
     result = Node::IoFile.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 144)
  def _reduce_92(val, _values, result)
     result = Node::IoFile.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 145)
  def _reduce_93(val, _values, result)
     result = Node::IoFile.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 147)
  def _reduce_94(val, _values, result)
     result = Node::Filename.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 149)
  def _reduce_95(val, _values, result)
     result = Node::IoHere.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 150)
  def _reduce_96(val, _values, result)
     result = Node::IoHere.new(val.first, val.last) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 152)
  def _reduce_97(val, _values, result)
     result = Node::HereEnd.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 154)
  def _reduce_98(val, _values, result)
     result = Node::NewlineList.new(nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 155)
  def _reduce_99(val, _values, result)
     result = Node::NewlineList.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 157)
  def _reduce_100(val, _values, result)
     result = Node::Linebreak.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 158)
  def _reduce_101(val, _values, result)
     result = Node::Linebreak.new(nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 160)
  def _reduce_102(val, _values, result)
     result = Node::SeparatorOp.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 161)
  def _reduce_103(val, _values, result)
     result = Node::SeparatorOp.new(val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 163)
  def _reduce_104(val, _values, result)
     result = Node::Separator.new(val.first, nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 164)
  def _reduce_105(val, _values, result)
     result = Node::Separator.new(nil, val.first) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 166)
  def _reduce_106(val, _values, result)
     result = Node::SequentialSep.new(nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'shell.racc', 167)
  def _reduce_107(val, _values, result)
     result = Node::SequentialSep.new(val.first) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ShellParser
